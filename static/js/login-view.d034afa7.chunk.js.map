{"version":3,"file":"static/js/login-view.d034afa7.chunk.js","mappings":"mLACA,EAAuB,wBAAvB,EAAuD,yB,wCC4DvD,EAtDkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,SAWN,OACE,0BACE,kBAAMC,SATW,SAACC,GACpBA,EAAEC,iBACFb,EAASc,EAAAA,EAAAA,MAAiB,CAAEX,MAAAA,EAAOE,SAAAA,KACnCD,EAAS,IACTE,EAAY,KAKoBS,aAAa,MAAMC,UAAWC,EAA5D,WACE,SAACC,EAAA,EAAD,CACEC,KAAK,QACLV,KAAK,QACLC,MAAOP,EACPiB,SAAUb,EACVc,MAAM,QACNC,QAAQ,WACRN,UAAWC,KAEb,SAACC,EAAA,EAAD,CACEC,KAAK,WACLV,KAAK,WACLC,MAAOL,EACPe,SAAUb,EACVgB,YAAY,WACZF,MAAM,WACNC,QAAQ,WACRN,UAAWC,KAGb,SAACO,EAAA,EAAD,CAAQF,QAAQ,WAAWH,KAAK,SAAhC","sources":["webpack://my-app/./src/views/LoginView/LoginView.module.css?c53e","views/LoginView/LoginView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"LoginView_form__pVpC+\",\"input\":\"LoginView_input__iq+Za\"};","import { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport s from \"./LoginView.module.css\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { TextField } from \"@mui/material\";\r\nimport operations from \"../../redux/auth/auth-operations\";\r\n\r\nconst LoginView = () => {\r\n  const dispatch = useDispatch();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case \"email\":\r\n        return setEmail(value);\r\n      case \"password\":\r\n        return setPassword(value);\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    dispatch(operations.logIn({ email, password }));\r\n    setEmail(\"\");\r\n    setPassword(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit} autoComplete=\"off\" className={s.form}>\r\n        <TextField\r\n          type=\"email\"\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={handleChange}\r\n          label=\"Email\"\r\n          variant=\"outlined\"\r\n          className={s.input}\r\n        />\r\n        <TextField\r\n          type=\"password\"\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={handleChange}\r\n          placeholder=\"Password\"\r\n          label=\"Password\"\r\n          variant=\"outlined\"\r\n          className={s.input}\r\n        />\r\n\r\n        <Button variant=\"outlined\" type=\"submit\">\r\n          Log in\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginView;\r\n"],"names":["dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","onSubmit","e","preventDefault","operations","autoComplete","className","s","TextField","type","onChange","label","variant","placeholder","Button"],"sourceRoot":""}