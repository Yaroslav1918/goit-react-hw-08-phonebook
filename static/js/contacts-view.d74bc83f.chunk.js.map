{"version":3,"file":"static/js/contacts-view.d74bc83f.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","components/ContactForm/ContactForm .js","components/ContactsList/ContactList.styled.js","components/Filter/Filter.styled.js","webpack://my-app/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.js","components/ContactsList/ContactsList.js","webpack://my-app/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://my-app/./src/components/Title/Title.module.css?a947","components/Title/Title.js","views/ContactsView/ContactsView.js","webpack://my-app/./src/views/RegisterView/RegisterView.module.css?6d4e"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const ContactsForm = styled.form`\r\n  max-width: 400px;\r\n\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  text-align: center;\r\n`;\r\nexport const ContactsMark = styled.label``;\r\nexport const ContactsInput = styled.input`\r\n  width: 200px;\r\n  margin-bottom: 10px;\r\n  font-size: 13px;\r\n  padding: 6px 0 4px 10px;\r\n  border: 1px solid #cecece;\r\n  background: #f6f6f6;\r\n  border-radius: 8px;\r\n`;\r\nexport const ContactsButton = styled.button`\r\n  display: block;\r\n  cursor: pointer;\r\n  border: 1px solid #cecece;\r\n  background: #f6f6f6;\r\n  box-shadow: inset 0px 20px 20px #ffffff;\r\n  border-radius: 8px;\r\n  padding: 6px 22px;\r\n  width: 120px;\r\n  &:hover {\r\n    background: #188ce8;\r\n  }\r\n  &:focus-:focus-visible {\r\n  }\r\n`;\r\nexport const ContactsSpan = styled.span`\r\n  display: flex;\r\n  margin-bottom: 5px;\r\n`;\r\n","import axios from \"axios\";\r\nimport {\r\n  addContactsRequest,\r\n  addContactsSuccess,\r\n  addContactsError,\r\n  deleteContactsRequest,\r\n  deleteContactsSuccess,\r\n  deleteContactsError,\r\n  fetchContactsRequest,\r\n  fetchContactsSuccess,\r\n  fetchContactsError,\r\n} from \"./contacts-actions\";\r\n\r\n// GET @ /tasks\r\nconst fetchContacts = () => async (dispatch) => {\r\n  dispatch(fetchContactsRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get(\"/contacts\");\r\n\r\n    dispatch(fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactsError(error.message));\r\n  }\r\n};\r\n\r\n// POST @ /tasks\r\nconst addContact = (name, number) => (dispatch) => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactsRequest());\r\n\r\n  axios\r\n    .post(\"/contacts\", contact)\r\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\r\n    .catch((error) => dispatch(addContactsError(error.message)));\r\n};\r\n\r\n// DELETE @ /tasks/:id\r\nconst deleteContact = (contactId) => (dispatch) => {\r\n  dispatch(deleteContactsRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${contactId}`)\r\n    .then(() => dispatch(deleteContactsSuccess(contactId)))\r\n    .catch((error) => dispatch(deleteContactsError(error.message)));\r\n};\r\n\r\n// PATCH @ /tasks/:id\r\n\r\nconst contactsOperations = {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\nexport default contactsOperations;\r\n","import { createSelector } from \"@reduxjs/toolkit\";\r\n\r\nexport const getLoading = (state) => state.contacts.loading;\r\n\r\nexport const getFilter = (state) => state.contacts.filter;\r\n\r\nexport const getAllContacts = (state) => state.contacts.items;\r\n\r\nexport const getVisibleContact = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (contacts, filter) => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact?.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  }\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { ContactsForm } from \"./ContactForm.styled\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { TextField } from \"@mui/material\";\r\nimport s from \"../../views/RegisterView/RegisterView.module.css\";\r\nimport { FiArrowUpRight } from \"react-icons/fi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\r\nimport { getAllContacts } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nexport default function ContactForm() {\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n  const visibleContacts = useSelector(getAllContacts);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(value);\r\n        break;\r\n\r\n      case \"number\":\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const onCheckNameValue = (contactName) => {\r\n    const validateNumber = number.includes(\"+\") ? parseInt(number) : number;\r\n\r\n    if (name.trim() === \"\" || number.trim() === \"\") {\r\n      return toast.error(\" Please fill in all fields!\");\r\n    }\r\n    if (!Number.isInteger(validateNumber)) {\r\n      return toast.error(\"The number must start with * + * !\");\r\n    }\r\n    if (\r\n      visibleContacts.some(\r\n        (contact) => contact.name.toLowerCase() === contactName.toLowerCase()\r\n      )\r\n    ) {\r\n      toast(`${contactName} is already in contacts`);\r\n      return;\r\n    }\r\n    dispatch(contactsOperations.addContact(name, number));\r\n  };\r\n\r\n  const onSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    onCheckNameValue(e.target.name.value);\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ContactsForm onSubmit={onSubmitForm}>\r\n        <TextField\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          onChange={handleChange}\r\n          id=\"outlined-basic\"\r\n          label=\"Name\"\r\n          variant=\"outlined\"\r\n          className={s.input}\r\n        />\r\n        <TextField\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          onChange={handleChange}\r\n          id=\"outlined-basic\"\r\n          label=\"Number\"\r\n          variant=\"outlined\"\r\n          className={s.input}\r\n        />\r\n\r\n        <Button variant=\"outlined\" type=\"submit\" className={s.button}>\r\n          add contact\r\n          <FiArrowUpRight className={s.icon} />\r\n        </Button>\r\n      </ContactsForm>\r\n    </>\r\n  );\r\n}\r\n","import styled from \"styled-components\";\r\nexport const ContactList = styled.ul`\r\n  margin-top: 15px;\r\n`;\r\nexport const ListItem = styled.li`\r\n  list-style: inside;\r\n  align-items: baseline;\r\n`;\r\nexport const Span = styled.span`\r\n  font-size: 20px;\r\n  margin-right: 10px;\r\n  margin-left: 5px;\r\n`;\r\nexport const ContactButton = styled.button`\r\n  margin-left: 5px;\r\n  background-color: #e7e7e7;\r\n  color: black;\r\n  border: none;\r\n  padding: 10px;\r\n  border-radius: 12px;\r\n  text-align: center;\r\n  text-decoration: none;\r\n  font-size: 16px;\r\n  &:hover {\r\n    background-color: #2d2da3;\r\n    color: white;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const FilterMark = styled.label``;\r\nexport const FilterInput = styled.input`\r\n  width: 200px;\r\n  margin-bottom: 10px;\r\n  font-size: 13px;\r\n  padding: 6px 0 4px 10px;\r\n  border: 1px solid #cecece;\r\n  background: #f6f6f6;\r\n  border-radius: 8px;\r\n`;\r\nexport const FilterSpan = styled.span`\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n`;\r\nexport const Container = styled.div`\r\n  text-align: center;\r\n`;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ContactItem_listItem__nJOCe\"};","import {\r\n  ContactButton,\r\n  ListItem,\r\n  Span,\r\n} from \"../ContactsList/ContactList.styled\";\r\nimport { FcPhoneAndroid } from \"react-icons/fc\";\r\n\r\nimport s from \"./ContactItem.module.css\";\r\nimport { getLoading } from \"../../redux/contacts/contacts-selectors\";\r\nimport { useSelector } from \"react-redux\";\r\nimport BeatLoader from \"react-spinners/BeatLoader\";\r\nimport { useState } from \"react\";\r\nconst ContactItem = ({ name, number, id, onDeleteTodo }) => {\r\n  const [value, setValue] = useState(false);\r\n  const loading = useSelector(getLoading);\r\n\r\n  const onChangeBoolean = () => {\r\n    setValue(true);\r\n  };\r\n\r\n  return (\r\n    <ListItem key={id} className={s.listItem}>\r\n      <Span> {name}</Span>\r\n      <Span> {number}</Span>\r\n      <FcPhoneAndroid />\r\n      <ContactButton\r\n        onClick={() => {\r\n          onDeleteTodo(id);\r\n          onChangeBoolean();\r\n        }}\r\n      >\r\n        {loading && value ? <BeatLoader size={9} /> : \"Delete\"}\r\n      </ContactButton>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default ContactItem;\r\n","import React from \"react\";\r\nimport { ContactList } from \"./ContactList.styled\";\r\nimport ContactItem from \"../ContactItem\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\r\n\r\nconst ContactsList = ({ contacts }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteTodo = (id) => {\r\n    dispatch(contactsOperations.deleteContact(id));\r\n  };\r\n\r\n  return (\r\n    <ContactList>\r\n      {contacts &&\r\n        contacts.map(({ id, number, name }) => (\r\n          <ContactItem\r\n            key={id}\r\n            id={id}\r\n            number={number}\r\n            name={name}\r\n            onDeleteTodo={onDeleteTodo}\r\n          />\r\n        ))}\r\n      {contacts.length === 0 && (\r\n        <p>Your phonebook is empty. Please add contact.</p>\r\n      )}\r\n    </ContactList>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Filter_input__jDMWd\"};","import React, { useState } from \"react\";\r\nimport { Container } from \"./Filter.styled\";\r\nimport ContactsList from \"../ContactsList/ContactsList\";\r\nimport { TextField } from \"@mui/material\";\r\nimport s from \"./Filter.module.css\";\r\nimport { getAllContacts } from \"../../redux/contacts/contacts-selectors\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Filter = () => {\r\n  const [filter, setFilter] = useState(\"\");\r\n  const visibleFilter = useSelector(getAllContacts);\r\n\r\n  const onChangeFilter = (event) => {\r\n    setFilter(event.currentTarget.value);\r\n  };\r\n  const getFilterList = () => {\r\n    return (\r\n      visibleFilter &&\r\n      visibleFilter.filter((contact) =>\r\n        contact?.name.toLowerCase().includes(filter)\r\n      )\r\n    );\r\n  };\r\n  const visibleItem = getFilterList();\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <TextField\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filter}\r\n          onChange={(e) => onChangeFilter(e)}\r\n          id=\"outlined-basic\"\r\n          variant=\"outlined\"\r\n          label=\"find contacts by name \"\r\n          className={s.input}\r\n        />\r\n        <ContactsList contacts={visibleItem} />\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Title_title__s5MnP\"};","import s from \"../Title/Title.module.css\";\r\n\r\nconst Title = ({ name }) => {\r\n  return <h2 className={s.title}>{name}</h2>;\r\n};\r\n\r\nexport default Title;\r\n","import { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport ContactForm from \"../../components/ContactForm\";\r\nimport { ContactList } from \"../../components/ContactsList/ContactList.styled\";\r\nimport Filter from \"../../components/Filter/Filter\";\r\nimport Title from \"../../components/Title\";\r\n\r\nimport contactsOperations from \"../../redux/contacts/contacts-operations\";\r\nimport { getAllContacts } from \"../../redux/contacts/contacts-selectors\";\r\n\r\nconst ContactsView = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const visibleContacts = useSelector(getAllContacts);\r\n\r\n  useEffect(() => {\r\n    if (visibleContacts.length >= 0) {\r\n      dispatch(contactsOperations.fetchContacts());\r\n    }\r\n  }, [dispatch, visibleContacts.length]);\r\n  return (\r\n    <>\r\n      <Title name={\"Phonebook\"} />\r\n      <ContactForm />\r\n      <ToastContainer />\r\n      <Title name={\"Contacts\"} />\r\n      {<Filter />}\r\n      {<ContactList />}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ContactsView;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterView_form__UQKIh\",\"input\":\"RegisterView_input__EqQ90\",\"button\":\"RegisterView_button__xWlzK\",\"icon\":\"RegisterView_icon__4bY2q\"};"],"names":["ContactsForm","styled","contactsOperations","fetchContacts","dispatch","fetchContactsRequest","axios","data","fetchContactsSuccess","fetchContactsError","message","addContact","name","number","contact","addContactsRequest","then","addContactsSuccess","catch","error","addContactsError","deleteContact","contactId","deleteContactsRequest","deleteContactsSuccess","deleteContactsError","getLoading","state","contacts","loading","getAllContacts","items","createSelector","filter","normalizedFilter","toLowerCase","includes","ContactForm","useState","setName","setNumber","visibleContacts","useSelector","useDispatch","handleChange","e","target","value","onSubmit","preventDefault","contactName","validateNumber","parseInt","trim","toast","Number","isInteger","some","onCheckNameValue","TextField","type","pattern","title","required","onChange","id","label","variant","className","s","Button","ContactList","ListItem","Span","ContactButton","Container","onDeleteTodo","setValue","onClick","size","map","length","setFilter","visibleFilter","visibleItem","currentTarget","useEffect"],"sourceRoot":""}